// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
  useUncheckedScalarInputs = true
}

model Vendor {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  /// @TypeGraphQL.omit(output: true)
  password String 
  name String @db.VarChar(255)
  city String 
  email String @unique
  isVerified Boolean @default(false)
  hasPaid Boolean @default(false)
  profile Profile?
  products Product[]
}

model Profile {
  id Int @default(autoincrement()) @id
  brandName String
  mobile String @db.VarChar(10) @unique
  /// @TypeGraphQL.omit(output: true)
  isMobverified Boolean @default(false)
  website String?
  instaURL String? 
  facebook String?
  whatsapp String
  vendorId Int
  vendor Vendor @relation(fields: [vendorId], references: [id])
}

model Product {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt() @default(now())
  name String 
  description String @db.VarChar(300)
  category String
  price Int 
  authorId Int
  url String[]
  author Vendor @relation(fields: [authorId], references: [id])
}

model Users {
  id Int @default(autoincrement()) @id
  name String @db.VarChar(200)
  email String @unique
  /// @TypeGraphQL.omit(output: true)
  password String
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
}

model Photo {
  id String @default(uuid()) @id
  url String
}